<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"
	default-autowire="byName" default-lazy-init="false">


<!-- 必须在调用exception的模块中打开component-scan
<context:component-scan base-package="cn.com.sinosoft.ebusiness" />
-->

	<bean id="exceptionConfigInit" scope="singleton"
		class="cn.com.sinosoft.ebusiness.sys.exception.ExceptionConfigInit" init-method="init">
		<property name="exceptionConfigPath" value="config/ExceptionConfig.xml"/>
	</bean>
	
	<bean id="queuesHolder" class="cn.com.sinosoft.util.queue.QueuesHolder">
		<property name="queueSize" value="1000" />
	</bean>

	<!-- 读出Queue中日志消息写入数据库的任务	 -->
	<bean id="jdbcExceptionWriter" class="cn.com.sinosoft.ebusiness.sys.exception.aspect.JdbcExceptionWriter" >
		<property name="queueName" value="exception" />
		<property name="appName" value="online" />
		<property name="batchSize" value="1" />
		<property name="sql">
			<value>
				insert into GE_Monitor_AppException(SERIALNO,APPNAME,ExceptionKind,UserExceptionCode,SubUserExceptionCode,ConcreteExceptionCode,ExceptionDesc,ExceptionReason,ExceptionTime,ExceptionGrade,identifyFlag)
				values(:serialNo,:appName,:exceptionKind,:userExceptionCode,:subUserExceptionCode,:concreteExceptionCode,:exceptionDesc,:exceptionReason,:exceptionTime,:exceptionGrade,:identifyFlag)
			</value>
		</property>
	</bean>
	
	<!-- 使用annotation定义Aspect
	<aop:aspectj-autoproxy/> 
	 -->
	<!-- 配置执行TraceUtils的Aspect -->
	<bean class="cn.com.sinosoft.ebusiness.sys.exception.aspect.UserExceptionAspect" /> 
	
	<!-- ExceptionQueueAppender 的单例 -->
	<bean id="exceptionQueueAppender" scope="singleton"
	class="cn.com.sinosoft.ebusiness.sys.exception.aspect.ExceptionQueueAppender">
		<property name="queueName" value="exception"/>
	</bean>
	
	
	<!-- 区别其它 DataSource-->
	<bean id="monitorDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- Connection Info -->
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<!-- 事务管理器配置, DataSource单数据源事务 -->
	<bean id="monitorTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="monitorDataSource" />
	</bean>
	
</beans>
