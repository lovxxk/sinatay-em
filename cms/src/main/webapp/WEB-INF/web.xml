<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.4"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<!-- Spring ApplicationContext配置文件的路径?,可使用通配符，多个路径用?1,号分隔 此参数用于后面的Spring-Context loader -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath*:spring/applicationContext*.xml
		</param-value>
	</context-param>
	<!-- filter for TraceFilter 首先过滤 -->
	<filter>
		<filter-name>traceFilter</filter-name>
		<filter-class>cn.com.sinosoft.ebusiness.log.webfilter.TraceFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>traceFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>

	<!-- 著名 Character Encoding filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
<!-- 	<filter-mapping> -->
<!-- 		<filter-name>encodingFilter</filter-name> -->
<!-- 		<url-pattern>/*</url-pattern> -->
<!-- 	</filter-mapping> -->

	<!-- spring security start -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- spring security end -->

	<!--Hibernate Open Session in View Filter -->
	<filter>
		<filter-name>hibernateFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
	</filter>
	<!-- hibernateFilter位置放在此处是为解决延迟加载和事务提交的问题 -->
	<filter-mapping>
		<filter-name>hibernateFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>hibernateFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/struts/*</url-pattern>
	</filter-mapping>

	<!-- <filter> -->
	<!-- <filter-name>struts-cleanup</filter-name> -->
	<!-- <filter-class>org.apache.struts2.dispatcher.ActionContextCleanUp</filter-class> -->
	<!-- </filter> -->

	<!-- <filter-mapping> -->
	<!-- <filter-name>struts-cleanup</filter-name> -->
	<!-- <url-pattern>/*</url-pattern> -->
	<!-- </filter-mapping> -->
	
	<filter>
		<filter-name>struts-prepare</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts-prepare</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>struts-execute</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts-execute</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 页面元素的GZIP压缩 Filter -->
	<filter>
		<filter-name>compressFilter</filter-name>
		<filter-class>ins.framework.web.CompressFilter</filter-class>
		<init-param>
			<param-name>ignoreKey</param-name>
			<param-value>.js,.css,.gif,.jpg,.vbs</param-value>
		</init-param>
	</filter>
	<!-- 页面元素的GZIP压缩 Filter，减少网络带宽 -->
	<filter-mapping>
		<filter-name>compressFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--Spring ApplicationContext 载入 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Spring 刷新Introspector防止内存泄露 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- cacheManager 服务端缓存 -->
	<listener>
		<listener-class>ins.framework.cache.CacheManagerInitListener</listener-class>
	</listener>

	<!-- session超时定义,单位为分钟 -->
	<session-config>
		<session-timeout>20</session-timeout>
	</session-config>
	<welcome-file-list>
		<welcome-file>/index.jsp</welcome-file>
	</welcome-file-list>
	<!-- 出错页面定义 -->
	<error-page>
		<!-- <exception-type>java.lang.Throwable</exception-type> -->
		<error-code>500</error-code>
		<location>/global/ui/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/global/ui/404.jsp</location>
	</error-page>
</web-app>

